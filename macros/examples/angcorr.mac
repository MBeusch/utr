/run/initialize

#########################################################################
#
# AngularCorrelationGenerator can create multiple primary particles
# in a single event, where the angular distribution of the n-th particle
# is dependent on the emission direction of the (n-1)-th particle.
# This can be used, for example, to simulate correlated gamma-rays from
# an n-step decay of an excited nuclear state.
#
# The information about particles and their angular distribution is given
# step by step to AngularDistributionGenerator.
# 
# There are up to three possibilities to define the direction of emission:
#
# 1) /angcorr/direction X Y Z
#    This simply means that all particles of a kind are emitted in the same
#    direction. This command can only be used for the first particle in
#    the cascade.
# 2) /angcorr/relativeangle ANGLE UNIT
#    The particle will be emitted at an angle ANGLE relative to the
#    previous particle. Providing only one angle means that there is
#    still one degree of freedom left, which is randomly sampled.
#    This means that the particles will be emitted on the surface of
#    a cone with the emission angle of the previous particle as a
#    rotational symmetry axis.
# 3) /angcorr/nstates NSTATES
#    /angcorr/state1 STATE1
#    /angcorr/state2 STATE2
#    /angcorr/state3 STATE3
#    ...
#    The particles will be emitted with an angular distribution that
#    is rotated in the same way as the emission direction of the previous
#    particle is rotated from the z-axis.
#
#
# For each step, the polarization of the radiation can also be
# specified using
#
# /angcorr/polarization X Y Z
#
# where X, Y and Z are the components of the (normalized)
# polarization vector of the outgoing radiation. Similar as
# the emission direction, the polarization axis of the n-th 
# particle will be rotated w.r.t. the (n-1)-th particle.
#########################################################################

# Define the number of steps in the cascade
/angcorr/steps 3

##################################
# Define the first step
##################################

# /angcorr/particle initiates the creation of a new cascade step. 
# The macro will fail if this is not the first command in a step definition.
/angcorr/particle gamma
/angcorr/energy 1. MeV
/angcorr/direction 0. 0. -1.
/angcorr/polarization 1. 0. 0.

##################################
# Define the second step
##################################

/angcorr/particle geantino
/angcorr/energy 3. MeV

/angcorr/relativeangle 10. deg
/angcorr/polarization 1. 0. 0.

##################################
# Define the third step
##################################

/angcorr/particle neutron
/angcorr/energy 5. MeV

/angcorr/nstates 3
/angcorr/state1 0.
/angcorr/state2 1.
/angcorr/state3 0.
# Unpolarized angular distributions are defined by
# a vector with vanishing length
# In this example, the angular distributions of the
# cascades 0^+ -> 1^+ -> 0^+ and
# 0^+ -> 1^- -> 0^+ are added up to give an
# unpolarized angular distribution
/angcorr/polarization 1. 0. 0.

##################################
# Define the source volume
##################################
# The following six commands give the position and dimensions of an envelope box, which
# should contain the desired source volume. Using rejection sampling, random positions
# inside this box will be generated and, if they are inside the arbitrarily shaped source
# volume, a particle will be emitted.
# The more closely the envelope box wraps the source volume, the more efficient the sampling
# algorithm will be.
#
# The information about the source volumes is the same for all steps
# in the cascade, i.e. it is assumed that all particles are emitted
# from a common origin.

# Determine the position of the source.
/angcorr/sourceX 0. mm
/angcorr/sourceY 0. mm
/angcorr/sourceZ 0. mm
#/angcorr/sourceZ 0. mm # Ideal position of gamma3 target in all geometries
#/angcorr/sourceZ 1574.80 mm # Ideal position of 2nd target in generation '18 geometries
#/angcorr/sourceZ 1612.10 mm # Ideal position of 2nd target in generation '16/17 geometries


# Determine the dimensions of the envelope box. Random numbers will be sampled in the 
# intervals [-0.5*sourceDX, 0.5*sourceDX], [-0.5*sourceDY, 0.5*sourceDY], and
# [-0.5*sourceDZ, 0.5*sourceDZ].
/angcorr/sourceDX 2. mm
/angcorr/sourceDY 2. mm
/angcorr/sourceDZ 2. mm

# Set the name of a physical volume that should act as a source.
# To add more physical volumes, call /ang/sourcePV multiple times with different arguments 
# (about using multiple sources, see also the caveat in the README.md).
/angcorr/sourcePV source

# Never simulate more than 2^32= 4294967296 particles using /run/beamOn, since this causes an overflow in the random number seed, giving you in principle the same results over and over again.
# In such cases execute the same simulation multiple times instead.
/run/beamOn 1000000
